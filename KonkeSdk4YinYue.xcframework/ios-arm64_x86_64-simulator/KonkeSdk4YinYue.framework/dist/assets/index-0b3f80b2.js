import{S as C,x as O,s as g,q as v,W as x,Z as _,z as P,u as $,A as k,a as m,I as D,L as I,m as V,M as R,B as S,a8 as G,R as w,$ as A,Q as E,G as q,w as F}from"./_plugin-vue_export-helper-ae94e834.js";import{u as p}from"./use-expose-833097fe.js";const z={name:C,shape:O("round"),disabled:Boolean,iconSize:g,modelValue:C,checkedColor:String,labelPosition:String,labelDisabled:Boolean};var K=v({props:x({},z,{bem:_(Function),role:String,parent:Object,checked:Boolean,bindGroup:P}),emits:["click","toggle"],setup(e,{emit:d,slots:t}){const o=$(),i=n=>{if(e.parent&&e.bindGroup)return e.parent.props[n]},c=k(()=>i("disabled")||e.disabled),u=k(()=>i("direction")),a=k(()=>{const n=e.checkedColor||i("checkedColor");if(n&&e.checked&&!c.value)return{borderColor:n,backgroundColor:n}}),s=n=>{const{target:l}=n,b=o.value,f=b===l||(b==null?void 0:b.contains(l));!c.value&&(f||!e.labelDisabled)&&d("toggle"),d("click",n)},r=()=>{const{bem:n,shape:l,checked:b}=e,f=e.iconSize||i("iconSize");return m("div",{ref:o,class:n("icon",[l,{disabled:c.value,checked:b}]),style:{fontSize:I(f)}},[t.icon?t.icon({checked:b,disabled:c.value}):m(D,{name:"success",style:a.value},null)])},h=()=>{if(t.default)return m("span",{class:e.bem("label",[e.labelPosition,{disabled:c.value}])},[t.default()])};return()=>{const n=e.labelPosition==="left"?[h(),r()]:[r(),h()];return m("div",{role:e.role,class:e.bem([{disabled:c.value,"label-disabled":e.labelDisabled},u.value]),tabindex:c.value?void 0:0,"aria-checked":e.checked,onClick:s},[n])}}});const[y,L]=V("checkbox-group"),N={max:g,disabled:Boolean,iconSize:g,direction:String,modelValue:w(),checkedColor:String},B=Symbol(y);v({name:y,props:N,emits:["change","update:modelValue"],setup(e,{emit:d,slots:t}){const{children:o,linkChildren:i}=R(B),c=a=>d("update:modelValue",a),u=(a={})=>{typeof a=="boolean"&&(a={checked:a});const{checked:s,skipDisabled:r}=a,n=o.filter(l=>l.props.bindGroup?l.props.disabled&&r?l.checked.value:s??!l.checked.value:!1).map(l=>l.name);c(n)};return S(()=>e.modelValue,a=>d("change",a)),p({toggleAll:u}),G(()=>e.modelValue),i({props:e,updateValue:c}),()=>{var a;return m("div",{class:L([e.direction])},[(a=t.default)==null?void 0:a.call(t)])}}});const[U,j]=V("checkbox"),H=x({},z,{bindGroup:P});var M=v({name:U,props:H,emits:["change","update:modelValue"],setup(e,{emit:d,slots:t}){const{parent:o}=A(B),i=a=>{const{name:s}=e,{max:r,modelValue:h}=o.props,n=h.slice();if(a)!(r&&n.length>=+r)&&!n.includes(s)&&(n.push(s),e.bindGroup&&o.updateValue(n));else{const l=n.indexOf(s);l!==-1&&(n.splice(l,1),e.bindGroup&&o.updateValue(n))}},c=k(()=>o&&e.bindGroup?o.props.modelValue.indexOf(e.name)!==-1:!!e.modelValue),u=(a=!c.value)=>{o&&e.bindGroup?i(a):d("update:modelValue",a)};return S(()=>e.modelValue,a=>d("change",a)),p({toggle:u,props:e,checked:c}),G(()=>e.modelValue),()=>m(K,q({bem:j,role:"checkbox",parent:o,checked:c.value,onToggle:u},e),E(t,["default","icon"]))}});const W=F(M);export{W as C};
